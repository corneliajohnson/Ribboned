{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\CJ\\\\workspace\\\\csharp\\\\Ribboned\\\\Ribboned\\\\clientside\\\\src\\\\components\\\\Ribbon\\\\RibbonDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { Button } from \"reactstrap\";\nexport const RibbonDetail = () => {\n  _s();\n\n  const [state, setState] = useState({\n    playing: false,\n    paused: false,\n    duration: 0\n  });\n  const [timeDisplayFormat, setTimeDisplayformat] = useState(\"normal\");\n  const [snags, setSnags] = useState([]);\n  const {\n    playing\n  } = state;\n  const {\n    paused\n  } = state; //refs\n\n  const playerRef = useRef(null);\n  const canvasRef = useRef(null); //play pause toggle\n\n  const handlePlayPause = () => {\n    setState({ ...state,\n      playing: !state.playing\n    });\n  };\n\n  const handlePlay = () => {\n    setState({ ...state,\n      playing: true\n    });\n  }; //format time\n\n\n  const format = seconds => {\n    if (isNaN(seconds)) {\n      return \"00:00\";\n    } //set formatting\n\n\n    const date = new Date(seconds * 1000);\n    const hh = date.getUTCHours();\n    const mm = date.getUTCMinutes();\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\n\n    if (hh) {\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\n    }\n\n    return `${mm}:${ss}`;\n  }; //get the seconds played\n\n\n  const handleProgress = changeState => {\n    if (!state.seeking) {\n      setState({ ...state,\n        ...changeState\n      }); //format seconds\n\n      const time = format(changeState.playedSeconds);\n      setTimeDisplayformat(time);\n    }\n  }; //add info for snag\n\n\n  const addSnag = () => {\n    const snagCopy = [...snags];\n    snagCopy.push({\n      time: playerRef.current.getCurrentTime(),\n      display: format(playerRef.current.getCurrentTime())\n    });\n    setSnags(snagCopy);\n  };\n\n  const handleSeekChange = (e, newValue) => {\n    console.log({\n      newValue\n    });\n    setState({ ...state,\n      played: parseFloat(newValue / 100)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Ribbon Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            onSeek: handleSeekChange,\n            ref: playerRef // muted={true}\n            ,\n            onPause: paused,\n            playing: playing,\n            onProgress: handleProgress,\n            controls: true //url=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\"\n            ,\n            url: \"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center m-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-lg btn-secondary w-50\",\n            onClick: () => {\n              handlePlayPause();\n              addSnag();\n            },\n            children: playing ? `Add Snag ${timeDisplayFormat}` : \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row p-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col align-self-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"list-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"list-group-item list-group-item-action active\",\n                children: \"Ribbon Snags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), snags.map(snag => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"list-group-item list-group-item-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn btn-link\",\n                    onClick: () => {\n                      //go to seconds stamp of video\n                      playerRef.current.seekTo(snag.time); //play video\n\n                      handlePlay();\n                    },\n                    children: snag.display\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this), \"Snag Note\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false)), \";\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RibbonDetail, \"zoCluW8rSgA868/cidFIhMjnOPE=\");\n\n_c = RibbonDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"RibbonDetail\");","map":{"version":3,"sources":["C:/Users/CJ/workspace/csharp/Ribboned/Ribboned/clientside/src/components/Ribbon/RibbonDetail.js"],"names":["React","useState","useRef","ReactPlayer","Button","RibbonDetail","state","setState","playing","paused","duration","timeDisplayFormat","setTimeDisplayformat","snags","setSnags","playerRef","canvasRef","handlePlayPause","handlePlay","format","seconds","isNaN","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","toString","padStart","handleProgress","changeState","seeking","time","playedSeconds","addSnag","snagCopy","push","current","getCurrentTime","display","handleSeekChange","e","newValue","console","log","played","parseFloat","map","snag","seekTo"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nexport const RibbonDetail = () => {\r\n  const [state, setState] = useState({\r\n    playing: false,\r\n    paused: false,\r\n    duration: 0,\r\n  });\r\n  const [timeDisplayFormat, setTimeDisplayformat] = useState(\"normal\");\r\n  const [snags, setSnags] = useState([]);\r\n  const { playing } = state;\r\n  const { paused } = state;\r\n\r\n  //refs\r\n  const playerRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  //play pause toggle\r\n  const handlePlayPause = () => {\r\n    setState({ ...state, playing: !state.playing });\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    setState({ ...state, playing: true });\r\n  };\r\n\r\n  //format time\r\n  const format = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n      return \"00:00\";\r\n    }\r\n\r\n    //set formatting\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n\r\n    if (hh) {\r\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n  };\r\n\r\n  //get the seconds played\r\n  const handleProgress = (changeState) => {\r\n    if (!state.seeking) {\r\n      setState({ ...state, ...changeState });\r\n      //format seconds\r\n      const time = format(changeState.playedSeconds);\r\n      setTimeDisplayformat(time);\r\n    }\r\n  };\r\n\r\n  //add info for snag\r\n  const addSnag = () => {\r\n    const snagCopy = [...snags];\r\n    snagCopy.push({\r\n      time: playerRef.current.getCurrentTime(),\r\n      display: format(playerRef.current.getCurrentTime()),\r\n    });\r\n    setSnags(snagCopy);\r\n  };\r\n\r\n  const handleSeekChange = (e, newValue) => {\r\n    console.log({ newValue });\r\n    setState({ ...state, played: parseFloat(newValue / 100) });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container \">\r\n        <h1 className=\"text-center\">Ribbon Title</h1>\r\n        <div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <ReactPlayer\r\n              onSeek={handleSeekChange}\r\n              ref={playerRef}\r\n              // muted={true}\r\n              onPause={paused}\r\n              playing={playing}\r\n              onProgress={handleProgress}\r\n              controls={true}\r\n              //url=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\"\r\n              url=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\r\n            />\r\n          </div>\r\n          <div className=\"text-center m-3\">\r\n            <Button\r\n              className=\"btn btn-lg btn-secondary w-50\"\r\n              onClick={() => {\r\n                handlePlayPause();\r\n                addSnag();\r\n              }}\r\n            >\r\n              {playing ? `Add Snag ${timeDisplayFormat}` : \"Continue\"}\r\n            </Button>\r\n          </div>\r\n          {/* Snags */}\r\n          <div className=\"row p-5\">\r\n            <div className=\"col align-self-center\">\r\n              <div class=\"list-group\">\r\n                <div class=\"list-group-item list-group-item-action active\">\r\n                  Ribbon Snags\r\n                </div>\r\n                {snags.map((snag) => (\r\n                  <>\r\n                    <div class=\"list-group-item list-group-item-actions\">\r\n                      <Button\r\n                        className=\"btn btn-link\"\r\n                        onClick={() => {\r\n                          //go to seconds stamp of video\r\n                          playerRef.current.seekTo(snag.time);\r\n                          //play video\r\n                          handlePlay();\r\n                        }}\r\n                      >\r\n                        {snag.display}\r\n                      </Button>\r\n                      Snag Note\r\n                    </div>\r\n                  </>\r\n                ))}\r\n                ;\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <canvas ref={canvasRef} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}