{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\CJ\\\\workspace\\\\csharp\\\\Ribboned\\\\Ribboned\\\\clientside\\\\src\\\\components\\\\Ribbon\\\\RibbonDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { Button } from \"reactstrap\";\nexport const RibbonDetail = () => {\n  _s();\n\n  const [state, setState] = useState({\n    playing: false,\n    duration: 0\n  });\n  const [timeDisplayFormat, setTimeDisplayformat] = useState(\"normal\");\n  const [bookmarks, setBookmarks] = useState([]);\n  const {\n    playing,\n    seeking\n  } = state;\n  const playerRef = useRef(null); //play pause toggle\n\n  const handlePlayPause = () => {\n    setState({ ...state,\n      playing: !state.playing\n    });\n  }; //format time\n\n\n  const format = seconds => {\n    if (isNaN(seconds)) {\n      return \"00:00\";\n    } //set formatting\n\n\n    const date = new Date(seconds * 1000);\n    const hh = date.getUTCHours();\n    const mm = date.getUTCMinutes();\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\n\n    if (hh) {\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\n    }\n\n    return `${mm}:${ss}`;\n  }; //get the seconds played\n\n\n  const handleProgress = changeState => {\n    if (!state.seeking) {\n      setState({ ...state,\n        ...changeState\n      }); //format seconds\n\n      const time = format(changeState.playedSeconds);\n      setTimeDisplayformat(time);\n    }\n  };\n\n  const addBookmark = () => {\n    const canvas = canvasRef.current;\n    canvas.width = 160;\n    canvas.height = 90;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(playerRef.current.getInternalPlayer(), 0, 0, canvas.width, canvas.height);\n    const dataUri = canvas.toDataURL();\n    canvas.width = 0;\n    canvas.height = 0;\n    const bookmarksCopy = [...bookmarks];\n    bookmarksCopy.push({\n      time: playerRef.current.getCurrentTime(),\n      display: format(playerRef.current.getCurrentTime()),\n      image: dataUri\n    });\n    setBookmarks(bookmarksCopy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Ribbon Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            ref: playerRef // muted={true}\n            ,\n            playing: playing,\n            onProgress: handleProgress,\n            controls: true,\n            url: \"https://www.youtube.com/watch?v=ysz5S6PUM-U\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center m-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-lg btn-secondary w-50\",\n            onClick: handlePlayPause,\n            children: playing ? `Add Snag ${timeDisplayFormat}` : \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-aldin-center m-3\",\n          children: [bookmarks.map((bookmark, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  playerRef.current.seekTo(bookmark.time);\n                },\n                elevation: 3,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  crossOrigin: \"anonymous\",\n                  src: bookmark.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"bookmark at \", bookmark.display]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RibbonDetail, \"pR0s5W5plgQG/Qidcf4o28GJXco=\");\n\n_c = RibbonDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"RibbonDetail\");","map":{"version":3,"sources":["C:/Users/CJ/workspace/csharp/Ribboned/Ribboned/clientside/src/components/Ribbon/RibbonDetail.js"],"names":["React","useState","useRef","ReactPlayer","Button","RibbonDetail","state","setState","playing","duration","timeDisplayFormat","setTimeDisplayformat","bookmarks","setBookmarks","seeking","playerRef","handlePlayPause","format","seconds","isNaN","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","toString","padStart","handleProgress","changeState","time","playedSeconds","addBookmark","canvas","canvasRef","current","width","height","ctx","getContext","drawImage","getInternalPlayer","dataUri","toDataURL","bookmarksCopy","push","getCurrentTime","display","image","map","bookmark","index","seekTo"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nexport const RibbonDetail = () => {\r\n  const [state, setState] = useState({\r\n    playing: false,\r\n    duration: 0,\r\n  });\r\n  const [timeDisplayFormat, setTimeDisplayformat] = useState(\"normal\");\r\n  const [bookmarks, setBookmarks] = useState([]);\r\n  const { playing, seeking } = state;\r\n  const playerRef = useRef(null);\r\n\r\n  //play pause toggle\r\n  const handlePlayPause = () => {\r\n    setState({ ...state, playing: !state.playing });\r\n  };\r\n\r\n  //format time\r\n  const format = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n      return \"00:00\";\r\n    }\r\n\r\n    //set formatting\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n\r\n    if (hh) {\r\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n  };\r\n\r\n  //get the seconds played\r\n  const handleProgress = (changeState) => {\r\n    if (!state.seeking) {\r\n      setState({ ...state, ...changeState });\r\n      //format seconds\r\n      const time = format(changeState.playedSeconds);\r\n      setTimeDisplayformat(time);\r\n    }\r\n  };\r\n\r\n  const addBookmark = () => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = 160;\r\n    canvas.height = 90;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      playerRef.current.getInternalPlayer(),\r\n      0,\r\n      0,\r\n      canvas.width,\r\n      canvas.height\r\n    );\r\n    const dataUri = canvas.toDataURL();\r\n    canvas.width = 0;\r\n    canvas.height = 0;\r\n    const bookmarksCopy = [...bookmarks];\r\n    bookmarksCopy.push({\r\n      time: playerRef.current.getCurrentTime(),\r\n      display: format(playerRef.current.getCurrentTime()),\r\n      image: dataUri,\r\n    });\r\n    setBookmarks(bookmarksCopy);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container \">\r\n        <h1 className=\"text-center\">Ribbon Title</h1>\r\n        <div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <ReactPlayer\r\n              ref={playerRef}\r\n              // muted={true}\r\n              playing={playing}\r\n              onProgress={handleProgress}\r\n              controls={true}\r\n              url=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\"\r\n            />\r\n          </div>\r\n          <div className=\"text-center m-3\">\r\n            <Button\r\n              className=\"btn btn-lg btn-secondary w-50\"\r\n              onClick={handlePlayPause}\r\n            >\r\n              {playing ? `Add Snag ${timeDisplayFormat}` : \"Continue\"}\r\n            </Button>\r\n          </div>\r\n          <div className=\"content-aldin-center m-3\">\r\n            {bookmarks.map((bookmark, index) => (\r\n              <>\r\n                <div key={index} item>\r\n                  <div\r\n                    onClick={() => {\r\n                      playerRef.current.seekTo(bookmark.time);\r\n                    }}\r\n                    elevation={3}\r\n                  >\r\n                    <img crossOrigin=\"anonymous\" src={bookmark.image} />\r\n                    <div>bookmark at {bookmark.display}</div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ))}\r\n            ;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}