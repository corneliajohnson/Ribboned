{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\CJ\\\\workspace\\\\csharp\\\\Ribboned\\\\Ribboned\\\\clientside\\\\src\\\\components\\\\Ribbon\\\\RibbonDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { Button } from \"reactstrap\";\nexport const RibbonDetail = () => {\n  _s();\n\n  const [state, setState] = useState({\n    playing: false,\n    paused: false,\n    duration: 0\n  });\n  const [timeDisplayFormat, setTimeDisplayformat] = useState(\"normal\");\n  const [snags, setSnags] = useState([]);\n  const {\n    playing\n  } = state;\n  const {\n    paused\n  } = state; //refs\n\n  const playerRef = useRef(null);\n  const canvasRef = useRef(null); //play pause toggle\n\n  const handlePlayPause = () => {\n    setState({ ...state,\n      playing: !state.playing\n    });\n  }; //format time\n\n\n  const format = seconds => {\n    if (isNaN(seconds)) {\n      return \"00:00\";\n    } //set formatting\n\n\n    const date = new Date(seconds * 1000);\n    const hh = date.getUTCHours();\n    const mm = date.getUTCMinutes();\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\n\n    if (hh) {\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\n    }\n\n    return `${mm}:${ss}`;\n  }; //get the seconds played\n\n\n  const handleProgress = changeState => {\n    if (!state.seeking) {\n      setState({ ...state,\n        ...changeState\n      }); //format seconds\n\n      const time = format(changeState.playedSeconds);\n      setTimeDisplayformat(time);\n    }\n  }; //add info for snag\n\n\n  const addSnag = () => {\n    const snagCopy = [...snags];\n    snagsCopy.push({\n      time: playerRef.current.getCurrentTime(),\n      display: format(playerRef.current.getCurrentTime())\n    });\n    setsnags(snagsCopy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Ribbon Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            ref: playerRef // muted={true}\n            ,\n            onPause: paused,\n            playing: playing,\n            onProgress: handleProgress,\n            controls: true,\n            url: \"https://www.youtube.com/watch?v=ysz5S6PUM-U\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center m-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-lg btn-secondary w-50\",\n            onClick: () => {\n              handlePlayPause();\n              addBookmark();\n            },\n            children: playing ? `Add Snag ${timeDisplayFormat}` : \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-algin-center m-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Snags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), snags.map((snag, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  playerRef.current.seekTo(snag.time);\n                },\n                elevation: 3,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"snag at \", snag.display]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RibbonDetail, \"zoCluW8rSgA868/cidFIhMjnOPE=\");\n\n_c = RibbonDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"RibbonDetail\");","map":{"version":3,"sources":["C:/Users/CJ/workspace/csharp/Ribboned/Ribboned/clientside/src/components/Ribbon/RibbonDetail.js"],"names":["React","useState","useRef","ReactPlayer","Button","RibbonDetail","state","setState","playing","paused","duration","timeDisplayFormat","setTimeDisplayformat","snags","setSnags","playerRef","canvasRef","handlePlayPause","format","seconds","isNaN","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","toString","padStart","handleProgress","changeState","seeking","time","playedSeconds","addSnag","snagCopy","snagsCopy","push","current","getCurrentTime","display","setsnags","addBookmark","map","snag","index","seekTo"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nexport const RibbonDetail = () => {\r\n  const [state, setState] = useState({\r\n    playing: false,\r\n    paused: false,\r\n    duration: 0,\r\n  });\r\n  const [timeDisplayFormat, setTimeDisplayformat] = useState(\"normal\");\r\n  const [snags, setSnags] = useState([]);\r\n  const { playing } = state;\r\n  const { paused } = state;\r\n\r\n  //refs\r\n  const playerRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  //play pause toggle\r\n  const handlePlayPause = () => {\r\n    setState({ ...state, playing: !state.playing });\r\n  };\r\n\r\n  //format time\r\n  const format = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n      return \"00:00\";\r\n    }\r\n\r\n    //set formatting\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n\r\n    if (hh) {\r\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n  };\r\n\r\n  //get the seconds played\r\n  const handleProgress = (changeState) => {\r\n    if (!state.seeking) {\r\n      setState({ ...state, ...changeState });\r\n      //format seconds\r\n      const time = format(changeState.playedSeconds);\r\n      setTimeDisplayformat(time);\r\n    }\r\n  };\r\n\r\n  //add info for snag\r\n  const addSnag = () => {\r\n    const snagCopy = [...snags];\r\n    snagsCopy.push({\r\n      time: playerRef.current.getCurrentTime(),\r\n      display: format(playerRef.current.getCurrentTime()),\r\n    });\r\n    setsnags(snagsCopy);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container \">\r\n        <h1 className=\"text-center\">Ribbon Title</h1>\r\n        <div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <ReactPlayer\r\n              ref={playerRef}\r\n              // muted={true}\r\n              onPause={paused}\r\n              playing={playing}\r\n              onProgress={handleProgress}\r\n              controls={true}\r\n              url=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\"\r\n            />\r\n          </div>\r\n          <div className=\"text-center m-3\">\r\n            <Button\r\n              className=\"btn btn-lg btn-secondary w-50\"\r\n              onClick={() => {\r\n                handlePlayPause();\r\n                addBookmark();\r\n              }}\r\n            >\r\n              {playing ? `Add Snag ${timeDisplayFormat}` : \"Continue\"}\r\n            </Button>\r\n          </div>\r\n          {/* Snags */}\r\n          <div className=\"content-algin-center m-3\">\r\n            <h3>Snags</h3>\r\n            {snags.map((snag, index) => (\r\n              <>\r\n                <div key={index} item>\r\n                  <div\r\n                    onClick={() => {\r\n                      playerRef.current.seekTo(snag.time);\r\n                    }}\r\n                    elevation={3}\r\n                  >\r\n                    <div>snag at {snag.display}</div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ))}\r\n            ;\r\n          </div>\r\n        </div>\r\n        <canvas ref={canvasRef} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}